--Agregar un producto al inventario

-- Definición de un producto
data Producto = Producto {
  nombre :: String,
  precio :: Float,
  stock :: Int
} deriving (Show)

-- Definición de un inventario como una lista de productos
type Inventario = [Producto]

-- Definición de una tienda que contiene un inventario
data Tienda = Tienda {
  inventario :: Inventario
} deriving (Show)

-- Función para agregar un producto al inventario de la tienda
agregarProducto :: Tienda -> IO Tienda
agregarProducto tienda = do
  putStrLn "Nombre del producto: "
  nombreProducto <- getLine
  putStrLn "Precio del producto: "
  precioProducto <- readLn
  putStrLn "Cantidad en stock: "
  stockProducto <- readLn

  let nuevoProducto = Producto nombreProducto precioProducto stockProducto
      nuevoInventario = nuevoProducto : inventario (tienda)

  putStrLn $ nombreProducto ++ " agregado al inventario."
  return $ Tienda nuevoInventario

-- Ejemplo de uso
main :: IO ()
main = do
  let tiendaInicial = Tienda { inventario = [] }

  putStrLn "Inventario inicial:"
  print $ inventario tiendaInicial

  tiendaConProducto <- agregarProducto tiendaInicial

  putStrLn "\nInventario después de agregar un producto:"
  print $ inventario tiendaConProducto
